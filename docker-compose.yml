# Docker automatically loads variables from .env file in the same directory
services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
    networks:
      - symfony
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./app:/var/www/app
    working_dir: /var/www/app
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - APP_SECRET=${APP_SECRET:-}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - MONOLOG_LEVEL=${MONOLOG_LEVEL:-debug}
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}?serverVersion=8.0.33&charset=utf8mb4
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - COMPOSER_ALLOW_SUPERUSER=1
      - COMPOSER_MEMORY_LIMIT=-1
      # PHP Configuration
      - PHP_FPM_PM=dynamic
      - PHP_FPM_PM_MAX_CHILDREN=50
      - PHP_FPM_PM_START_SERVERS=5
      - PHP_FPM_PM_MIN_SPARE_SERVERS=5
      - PHP_FPM_PM_MAX_SPARE_SERVERS=35
      - PHP_FPM_PM_MAX_REQUESTS=500
      - PHP_MEMORY_LIMIT=256M
      - PHP_MAX_EXECUTION_TIME=300
      - PHP_MAX_INPUT_TIME=300
    networks:
      - symfony
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - mysql
      - redis
    # Override PHP-FPM configuration
    command: >
      sh -c "docker-php-ext-enable opcache
      && echo 'pm = dynamic' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'pm.max_children = 50' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'pm.start_servers = 5' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'pm.min_spare_servers = 5' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'pm.max_spare_servers = 35' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'pm.max_requests = 500' >> /usr/local/etc/php-fpm.d/www.conf
      && echo 'memory_limit = 256M' >> /usr/local/etc/php/conf.d/custom.ini
      && echo 'max_execution_time = 300' >> /usr/local/etc/php/conf.d/custom.ini
      && echo 'max_input_time = 300' >> /usr/local/etc/php/conf.d/custom.ini
      && php-fpm"

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - symfony
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 2s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - symfony
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  messenger-worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./app:/var/www/app
    working_dir: /var/www/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - APP_SECRET=${APP_SECRET:-}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}?serverVersion=8.0.33&charset=utf8mb4
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - COMPOSER_ALLOW_SUPERUSER=1
      - COMPOSER_MEMORY_LIMIT=-1
    command: bash -c "sleep 10 && cd /var/www/app && bin/console messenger:consume async --time-limit=3600 --memory-limit=512M"
    restart: unless-stopped
    networks:
      - symfony
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  mysql_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  redis_data:

networks:
  symfony:
    driver: bridge
