# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    app.log_path: '%kernel.logs_dir%/app.log'
    app.log_level: '%env(LOG_LEVEL:debug)%'
    redis_dsn: '%env(REDIS_URL)%'
    app.version: '%env(APP_VERSION)%'
    app.environment: '%env(APP_ENV)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $appVersion: '%app.version%'
            $appEnv: '%app.environment%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Service/StructuredLogger.php'

    # Controllers
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        bind:
            $appVersion: '%app.version%'
            $appEnv: '%app.environment%'

    # Controllers configuration
    App\Controller\HealthCheckController:
        arguments:
            $appVersion: '%app.version%'
            $appEnv: '%app.environment%'

    # Repositories
    App\Repository\:
        resource: '../src/Repository'
        tags: ['doctrine.repository_service']

    # Interfaces
    App\Interface\FizzBuzzServiceInterface: '@App\Service\FizzBuzzService'
    App\Interface\FizzBuzzSequenceServiceInterface: '@App\Service\FizzBuzzSequenceService'
    App\Interface\FizzBuzzEventServiceInterface: '@App\Service\FizzBuzzEventService'
    App\Interface\SequenceCacheInterface: '@App\Service\SequenceCache'
    App\Interface\FizzBuzzRequestRepositoryInterface: '@App\Repository\FizzBuzzRequestRepository'
    App\Interface\FizzBuzzStatisticsServiceInterface: '@App\Service\FizzBuzzStatisticsService'

    # Services
    Redis:
        class: Redis
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'
        tags:
            - { name: 'monolog.logger', channel: 'redis' }

    App\Service\DistributedLockService:
        arguments:
            $redis: '@Redis'

    App\Service\ReconciliationService:
        tags:
            - { name: 'monolog.logger', channel: 'reconciliation' }

    App\MessageHandler\CreateFizzBuzzRequestHandler:
        tags:
            - { name: 'messenger.message_handler' }
            - { name: 'monolog.logger', channel: 'fizzbuzz' }

    # Bind interfaces to implementations
    App\Interface\FizzBuzzRequestInterface: '@App\Request\FizzBuzzRequest'
    App\Interface\FizzBuzzResponseInterface: '@App\Response\FizzBuzzResponse'
    App\Interface\BaseLoggerInterface: '@App\Service\MonologAdapter'
    App\Interface\ErrorLoggerInterface: '@App\Service\ErrorLogger'
    App\Interface\SequenceLoggerInterface: '@App\Service\SequenceLogger'
    App\Interface\SequenceGeneratorInterface: '@App\Service\SequenceGenerator'
    App\Interface\EventDispatcherInterface: '@App\Service\EventDispatcher'
    App\Interface\RequestLoggerInterface: '@App\Service\StructuredLogger'

    # Redis service
    cache.app.redis:
        class: Symfony\Component\Cache\Adapter\RedisAdapter
        arguments:
            - '@Redis'
            - 'fizzbuzz'

    # Monolog adapter
    App\Service\MonologAdapter:
        arguments:
            - '@monolog.logger.request'

    # Error logger
    App\Service\ErrorLogger:
        arguments:
            $logger: '@monolog.logger.error'
            $messageBus: '@messenger.default_bus'

    # Sequence logger
    App\Service\SequenceLogger:
        arguments:
            - '@App\Interface\BaseLoggerInterface'

    # Sequence cache
    App\Service\SequenceCache:
        arguments:
            - '@cache.app.redis'

    # Message handlers
    App\MessageHandler\LogMessageHandler:
        arguments:
            $requestLogger: '@monolog.logger.request'
            $errorLogger: '@monolog.logger.error'

    App\MessageHandler\FizzBuzzEventHandler:
        arguments:
            $logger: '@App\Interface\RequestLoggerInterface'

    # Structured logger
    App\Service\StructuredLogger:
        public: true
        arguments:
            $name: 'app'
            $logPath: '%kernel.logs_dir%/request.log'
            $messageBus: '@messenger.default_bus'
            $handlers: []
            $processors: []

    # Validator
    App\Service\FizzBuzzRequestValidator:
        public: true
        tags: ['validator.constraint_validator']

    # Exception handler
    App\Exception\FizzBuzzExceptionHandler:
        arguments:
            $errorLogger: '@App\Interface\ErrorLoggerInterface'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    # Formatter
    monolog.formatter.custom_json:
        class: App\Formatter\CustomJsonFormatter
        public: true

    # Rule factory
    App\Interface\SequenceRuleFactoryInterface:
        class: App\Factory\DefaultSequenceRuleFactory

    # Messenger bus
    Symfony\Component\Messenger\MessageBusInterface: '@messenger.default_bus'

    App\Service\:
        resource: '../src/Service/'
        exclude:
            - '../src/Service/StructuredLogger.php'
        tags: ['app.service']

